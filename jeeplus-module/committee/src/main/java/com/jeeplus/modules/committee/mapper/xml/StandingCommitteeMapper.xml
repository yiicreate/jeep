<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jeeplus.modules.committee.mapper.StandingCommitteeMapper">

	<sql id="standingCommitteeColumns">
		a.id AS "id",
		a.end_time AS "endTime",
		a.start_time AS "startTime",
		a.latest AS "latest",
		a.period AS "period",
		a.create_by AS "createBy.id",
		a.create_date AS "createDate",
		a.update_by AS "updateBy.id",
		a.update_date AS "updateDate",
		a.remarks AS "remarks",
		a.del_flag AS "delFlag"
	</sql>

	<sql id="standingCommitteeJoins">

	</sql>


	<select id="get" resultType="StandingCommittee" >
		SELECT
			<include refid="standingCommitteeColumns"/>
		FROM standing_committee a
		<include refid="standingCommitteeJoins"/>
		WHERE a.id = #{id}
	</select>

	<select id="findList" resultType="StandingCommittee" >
		SELECT
			<include refid="standingCommitteeColumns"/>
		FROM standing_committee a
		<include refid="standingCommitteeJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			${dataScope}
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>

	<select id="findAllList" resultType="StandingCommittee" >
		SELECT
			<include refid="standingCommitteeColumns"/>
		FROM standing_committee a
		<include refid="standingCommitteeJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			${dataScope}
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>

	<insert id="insert">
		INSERT INTO standing_committee(
			id,
			end_time,
			start_time,
			latest,
			period,
			create_by,
			create_date,
			update_by,
			update_date,
			remarks,
			del_flag
		) VALUES (
			#{id},
			#{endTime},
			#{startTime},
			#{latest},
			#{period},
			#{createBy.id},
			#{createDate},
			#{updateBy.id},
			#{updateDate},
			#{remarks},
			#{delFlag}
		)
	</insert>

	<update id="update">
		UPDATE standing_committee SET
			end_time = #{endTime},
			start_time = #{startTime},
			latest = #{latest},
			period = #{period},
			update_by = #{updateBy.id},
			update_date = #{updateDate},
			remarks = #{remarks}
		WHERE id = #{id}
	</update>


	<!--物理删除-->
	<update id="delete">
		DELETE FROM standing_committee
		WHERE id = #{id}
	</update>

	<!--逻辑删除-->
	<update id="deleteByLogic">
		UPDATE standing_committee SET
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</update>


	<!-- 根据实体名称和字段名称和字段值获取唯一记录 -->
	<select id="findUniqueByProperty" resultType="StandingCommittee">
		select * FROM standing_committee  where ${propertyName} = #{value}
	</select>

</mapper>